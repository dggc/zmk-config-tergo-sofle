/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/outputs.h>

#define HOST_OS 1  //linux
#include "zmk-helpers/helper.h"

// Source desired key-position labels
#include "zmk-helpers/key-labels/sofle.h"

#define ___ &trans
#define NA &none
#define SENSORS &inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN

// Enumera as camadas do teclado
#define TBASE 0
#define TADEPT 0 // TODO delete
#define SENIPLY_BASE 0 // TODO delete

#define TSYMB_NAV 1
#define TADJUST 2
#define TMEDIA 0 // TODO delete
#define TNUMPAD 0 // TODO delete
#define TMOUSE 0 // TODO delete

#define MIRYOKU 3
#define ROMAO 13

// ABNT2 keycodes
// Mapeamento de teclas ABNT2 que são usados para o layout brasileiro
// Inspired by https://github.com/qmk/qmk_firmware/blob/master/quantum/keymap_extras/keymap_brazilian_abnt2.h
#define BR_SLSH INT1
#define BR_ACUT LBKT
#define BR_RBKT NUHS
#define BR_RBCT LS(NUHS)
#define BR_LBKT RBKT
#define BR_LBCT LS(RBKT)

// Abaixo, há especificações do comportamento do tap-hold para teclas com duplo comportamento
// Para mais detalhes: https://zmk.dev/docs/keymaps/behaviors/hold-tap

#define TAPPING_TERM 300 // Tempo em milissegundos para diferenciar o tap-hold

// Para teclas com tap-hold em que o hold é um modificador, como CTRL, ALT, etc
&mt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <TAPPING_TERM>;
    flavor = "balanced"; // Pode ser "balanced", "hold-preferred" ou "tap-preferred"
};

// Para teclas com tap-hold em que o hold é uma mudança de camada, como SYMB_NAV, MEDIA, etc
&lt {
    tapping-term-ms = <TAPPING_TERM>;
    quick-tap-ms = <TAPPING_TERM>;
    flavor = "balanced"; // Pode ser "balanced", "hold-preferred" ou "tap-preferred"
};

&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

// Combos do teclado
/ {
    combos {
        compatible = "zmk,combos";
        combo_dongle_bootloader {
            // Faz o dongle entrar em modo de bootloader, para gravacao do firmware
            timeout-ms = <30>; // Tempo de tolerancia para apertar as teclas ao mesmo tempo
            key-positions = <50 51 58 59>; // 2 primeiras e 2 ultimas teclas da linha de teclas mais abaixo do teclado
            bindings = <&bootloader>; // Tecla a ser simulada ao apertar a combinação acima
        };
        combo_unlock_zmk_studio {
            // Desbloqueia o ZMK Studio
            timeout-ms = <30>; // Tempo de tolerancia para apertar as teclas ao mesmo tempo
            key-positions = <50 59>; // primeira e última teclas da linha de teclas mais abaixo do teclado
            bindings = <&studio_unlock>; // Tecla a ser simulada ao apertar a combinação acima
        };
    };
};


/ {
    behaviors {
        rot_msc: sensor_rotate_msc {
            compatible = "zmk,behavior-sensor-rotate-var";
	        tap-ms = <20>;
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;
        };
    };
};

ZMK_LAYER(Base,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp ESC       &kp N1        &kp N2        &kp N3        &kp N4        &kp N5                                           &kp N6        &kp N7        &kp N8        &kp N9        &kp N0        &kp MINUS
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp TAB       &kp Q         &kp W         &kp E         &kp R         &kp T                                            &kp Y         &kp U         &kp I         &kp O         &kp P         &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LSHFT     &kp A         &kp S         &kp D         &kp F         &kp G                                            &kp H         &kp J         &kp K         &kp L         &kp SEMI      &kp SQT
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╭─────────────╮    ╭─────────────╮├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LCTRL     &kp Z         &kp X         &kp C         &kp V         &kp B          &mo TMEDIA           &mo TADJUST    &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp ENTER
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯    ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                                &mo TNUMPAD    &kp LGUI      &kp LALT      &kp SPACE      &mo TSYMB_NAV         &kp ENTER    &kp BSPC      &kp DEL       &kp RGUI      &kp RCTRL
//                             ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯      ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
, SENSORS)


ZMK_LAYER(SymNv,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                                           &kp F6        &kp F7        &kp F8        &kp F9        &kp F10       &kp F11
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp GRAVE     &kp LS(N6)    &kp KP_PLUS   &kp LS(LBKT)  &kp LS(RBKT)                                     &kp PG_UP     &kp HOME      &kp UP        &kp END       &kp INS       &kp F12
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp LS(GRAVE) &kp EQUAL     &kp KP_MINUS  &kp LS(N9)    &kp LS(N0)                                       &kp PG_DN     &kp LEFT      &kp DOWN      &kp RIGHT     &kp PSCRN     &caps_word
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╭─────────────╮    ╭─────────────╮├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp NUBS      &kp LS(NUBS)  &kp LS(MINUS) &kp LBKT      &kp RBKT        ___                ___           &kp CAPS      &kp LC(LEFT)  &kp ESC       &kp LC(RIGHT) &kp PAUSE_BREAK NA
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯    ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                                ___           ___           ___           ___             ___                ___           ___           ___           ___           ___
//                             ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯      ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
, SENSORS)

ZMK_LAYER(Confg,
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                                  ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &studio_unlock &bt BT_SEL 0 &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                                     NA            NA            NA            NA            NA            NA
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    NA             NA           NA            NA            NA            NA                                               NA            NA            &bt BT_CLR_ALL NA           NA            NA
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                                  ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    NA             NA           NA            &out OUT_TOG  NA            NA                                               NA            NA            &bt BT_CLR     NA           NA            NA
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╭─────────────╮    ╭─────────────╮├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &bootloader    &to MIRYOKU  &to TBASE      &to TADEPT   &to SENIPLY_BASE &to ROMAO    ___                ___           NA            NA            NA             NA           NA            &bootloader
// ╰─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤╰─────────────╯    ╰─────────────╯├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────╯
                                ___           ___           ___           ___            ___                 ___           ___           ___           ___            ___
//                             ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯      ╰─────────────┴─────────────┴─────────────┴─────────────┴─────────────╯
, SENSORS)

#include "miryoku/custom_config.h"
#include "miryoku/mapping/60/sofle.h"
#include "miryoku/miryoku.dtsi"

#define LINUX
#include "romao/mappings/sofle.h"
#include "romao/definitions/includes.h"
#include "romao/definitions/romao_layer_bindings.h"
#include "romao/definitions/romao_layers.dtsi"

#include "combos.dtsi"